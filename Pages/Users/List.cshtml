@page
@model ListModel

@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using FagElGamousExcavation.Pages

<table class="table table-sm table-bordered">
    <thead>
        <tr>
            @*<th>ID</th>*@
            <th>Username</th>
            <th>Email</th>
            <th></th>
        </tr>
    </thead>
    
    @if (Model.Users.Count() == 0)
    {
        <tr><td colspan="4" class="text-center">No User Accounts</td></tr>
    }
    else
    {
        foreach (IdentityUser user in Model.Users)
        {
            <tbody>
                <tr>
                    @*<td>@user.Id</td>*@
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td class="text-center">
                        <form asp-page="List" method="post">
                            <input type="hidden" name="Id" value="@user.Id" />
                            <a class="btn btn-sm btn-warning" asp-page="Editor"
                               asp-route-id="@user.Id" asp-route-mode="edit">Edit</a>
                            <button type="submit" class="btn btn-sm btn-danger">
                                Delete
                            </button>
                        </form>
                    </td>
                </tr>
            </tbody>
        }
    }
</table>
<a class="btn btn-primary" asp-page="create">Create</a>
@functions {
    public class ListModel : AdminPageModel
    {
        public UserManager<IdentityUser> UserManager;
        public ListModel(UserManager<IdentityUser> userManager)
        {
            UserManager = userManager;
        }
        public IEnumerable<IdentityUser> Users { get; set; }
        public void OnGet()
        {
            Users = UserManager.Users;
        }
        public async Task<IActionResult> OnPostAsync(string id)
        {
            IdentityUser user = await UserManager.FindByIdAsync(id);
            if (user != null)
            {
                await UserManager.DeleteAsync(user);
            }
            return RedirectToPage();
        }
    }
}